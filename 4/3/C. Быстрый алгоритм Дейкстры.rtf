{\rtf1\ansi\ansicpg1251\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import heapq\
def get_answer(a, n, s, f):\
    answerList = \{\}\
    heap = [[0, s]]\
    check = [False for _ in range(n + 1)]\
\
    for i in a:\
        answerList[i] = 100**10\
        heap.append([100 ** 10, i])\
    heap.remove([100 ** 10, s])\
    i = s\
    heapq.heapify(heap)\
    answerList[i] = 0\
    while i != f and len(heap) != 0:\
        i = heap[0][-1]\
        heapq.heappop(heap)\
        while check[i] == True:\
            i = heap[0][-1]\
            heapq.heappop(heap)\
        check[i] = True\
        for j in a[i]:\
            x = j[0]\
            y = j[-1]\
            h = answerList[i]\
            if answerList[x] > y + h:\
                answerList[x] = y + h\
                heapq.heappush(heap, [y + h, x])\
\
\
    if answerList[f] == 100**10:\
        return -1\
    return answerList[f]\
\
with open ('input.txt', 'r') as f:\
    n, k = map(int, f.readline().split())\
    A = \{i: [] for i in range(n + 1)\}\
    for i in range(k):\
        a, b, g = map(int, f.readline().split())\
        A[a].append([b, g])\
        A[b].append([a, g])\
    s, f = map(int, f.readline().split())\
\
print(get_answer(A, n, s, f))}